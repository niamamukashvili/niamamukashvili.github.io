{"version":3,"sources":["../js/gaia.es6"],"names":["autorotate","degPerSec","planet","lastTick","paused","plugins","pause","resume","onDraw","Date","now","delta","rotation","projection","rotate","autocenter","options","needsCentering","globe","resize","width","window","innerWidth","extraWidth","height","innerHeight","extraHeight","canvas","translate","onInit","d3","select","on","autoscale","scale","Math","min","document","getElementById","planetaryjs","loadPlugin","earth","topojson","file","oceans","fill","land","borders","stroke","pings","zoom","scaleExtent","drag","onDragStart","onDragEnd","draw","colors","pow","exponent","domain","range","angles","ttls","json","err","data","alert","start","parseInt","time","end","length","currentTime","getTime","updateDate","text","moment","utc","format","percentToDate","linear","realToData","event","target","value","call","behavior","timer","realDelta","dataDelta","toPing","filter","d","i","ping","add","lng","lat","angle","mag","color","ttl","property","invert"],"mappings":"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","sourcesContent":["(function () {\n    /**\n     *\n     * @param degPerSec\n     * @returns {function(...[*]=)}\n     */\n    const autorotate = function (degPerSec) {\n        return function (planet) {\n            let lastTick = null;\n            let paused = false;\n            planet.plugins.autorotate = {\n                pause: function () {\n                    paused = true;\n                },\n                resume: function () {\n                    paused = false;\n                }\n            };\n            planet.onDraw(function () {\n                if (paused || !lastTick) {\n                    lastTick = new Date();\n                } else {\n                    const now = new Date();\n                    const delta = now - lastTick;\n                    const rotation = planet.projection.rotate();\n                    rotation[0] += degPerSec * delta / 1000;\n                    if (rotation[0] >= 180) rotation[0] -= 360;\n                    planet.projection.rotate(rotation);\n                    lastTick = now;\n                }\n            });\n        };\n    };\n\n    /**\n     *\n     * @param options\n     * @returns {function(...[*]=)}\n     */\n    function autocenter(options) {\n        options = options || {};\n        let needsCentering = false;\n        let globe = null;\n\n        const resize = function () {\n            const width = window.innerWidth + (options.extraWidth || 0);\n            const height = window.innerHeight + (options.extraHeight || 0);\n            globe.canvas.width = width;\n            globe.canvas.height = height;\n            globe.projection.translate([width / 2, height / 2]);\n        };\n\n        return function (planet) {\n            globe = planet;\n            planet.onInit(function () {\n                needsCentering = true;\n                d3.select(window).on('resize', function () {\n                    needsCentering = true;\n                });\n            });\n\n            planet.onDraw(function () {\n                if (needsCentering) {\n                    resize();\n                    needsCentering = false;\n                }\n            });\n        };\n    }\n\n    /**\n     *\n     * @param options\n     * @returns {function(...[*]=)}\n     */\n    function autoscale(options) {\n        options = options || {};\n        return function (planet) {\n            planet.onInit(function () {\n                const width = window.innerWidth + (options.extraWidth || 0);\n                const height = window.innerHeight + (options.extraHeight || 0);\n                planet.projection.scale(Math.min(width, height) / 2);\n            });\n        };\n    }\n\n    const canvas = document.getElementById('eventCanvas');\n\n    const planet = planetaryjs.planet();\n    planet.loadPlugin(autocenter({extraHeight: -120}));\n    planet.loadPlugin(autoscale({extraHeight: -120}));\n    planet.loadPlugin(planetaryjs.plugins.earth({\n        topojson: {file: '/json/continents.json'},\n        oceans: {fill: '#001320'},\n        land: {fill: '#06304e'},\n        borders: {stroke: '#001320'}\n    }));\n    planet.loadPlugin(planetaryjs.plugins.pings());\n    planet.loadPlugin(planetaryjs.plugins.zoom({\n        scaleExtent: [50, 5000]\n    }));\n    planet.loadPlugin(planetaryjs.plugins.drag({\n        onDragStart: function () {\n            this.plugins.autorotate.pause();\n        },\n        onDragEnd: function () {\n            this.plugins.autorotate.resume();\n        }\n    }));\n    planet.loadPlugin(autorotate(5));\n    planet.projection.rotate([100, -10, 0]);\n    planet.draw(canvas);\n\n    const colors = d3.scale.pow()\n        .exponent(3)\n        .domain([2, 4, 6, 8, 10])\n        .range(['white', 'yellow', 'orange', 'red', 'purple']);\n    const angles = d3.scale.pow()\n        .exponent(3)\n        .domain([2.5, 10])\n        .range([0.5, 15]);\n    const ttls = d3.scale.pow()\n        .exponent(3)\n        .domain([2.5, 10])\n        .range([5000, 8000]);\n\n    d3.json('/json/events.json', function (err, data) {\n        if (err) {\n            alert(\"Problem loading the events data.\");\n            return;\n        }\n\n        const start = parseInt(data[0].time, 10);\n        const end = parseInt(data[data.length - 1].time, 10);\n        let currentTime = start;\n        let lastTick = new Date().getTime();\n\n        const updateDate = function () {\n            d3.select('#date').text(moment(currentTime).utc().format(\"MMM DD YYYY HH:mm UTC\"));\n        };\n\n        const percentToDate = d3.scale.linear()\n            .domain([0, 100])\n            .range([start, end]);\n\n        const realToData = d3.scale.linear()\n            .domain([0, 1000 * 60 * 12])\n            .range([0, end - start]);\n\n        let paused = false;\n\n        d3.select('#slider')\n            .on('change', function () {\n                currentTime = percentToDate(d3.event.target.value);\n                updateDate();\n            })\n            .call(d3.behavior.drag()\n                .on('dragstart', function () {\n                    paused = true;\n                })\n                .on('dragend', function () {\n                    paused = false;\n                })\n            );\n\n        d3.timer(function () {\n            const now = new Date().getTime();\n\n            if (paused) {\n                lastTick = now;\n                return;\n            }\n\n            let realDelta = now - lastTick;\n            if (realDelta > 500) realDelta = 500;\n            const dataDelta = realToData(realDelta);\n\n            const toPing = data.filter(function (d) {\n                return d.time > currentTime && d.time <= currentTime + dataDelta;\n            });\n\n            for (let i = 0; i < toPing.length; i++) {\n                const ping = toPing[i];\n                planet.plugins.pings.add(ping.lng, ping.lat, {\n                    angle: angles(ping.mag),\n                    color: colors(ping.mag),\n                    ttl: ttls(ping.mag)\n                });\n            }\n\n            currentTime += dataDelta;\n            if (currentTime > end) currentTime = start;\n            updateDate();\n            d3.select('#slider').property('value', percentToDate.invert(currentTime));\n            lastTick = now;\n        });\n    });\n})();\n"],"file":"gaia.js"}